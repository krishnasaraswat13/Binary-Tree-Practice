/*
class Node
{
    int data; //data of the node
    int hd; //horizontal distance of the node
    Node left, right; //left and right references

    // Constructor of tree node
    public Node(int key)
    {
        data = key;
        hd = Integer.MAX_VALUE;
        left = right = null;
    }
}
*/

class Solution {
    public ArrayList<Integer> bottomView(Node root) {
        // Code here
        ArrayList<Integer> ls=new ArrayList<>();
        Queue<Node> q=new LinkedList<Node>();
        Map<Integer,Integer> map=new TreeMap<>();
        root.hd=0;
        q.add(root);
        while(!q.isEmpty()){
            Node temp=q.remove();
            int hd=temp.hd;
            map.put(hd,temp.data);
            if(temp.left!=null){
                temp.left.hd=temp.hd-1;
                q.add(temp.left);
            }
            if(temp.right!=null){
                temp.right.hd=temp.hd+1;
                q.add(temp.right);
            }
        }
        for(Map.Entry<Integer,Integer>entry :map.entrySet()){
            ls.add(entry.getValue());
        }
        return ls;
    }
}